<apex:component controller="ResponsiveCalendarCtrl"> 

<apex:attribute name="ObjName"  type="string" description="Object Name to map to Calendar" required="true"/>  
<apex:attribute name="StartDateTimeFieldName" type="string"  description="Start Date field Name" required="true"/>   
<apex:attribute name="EndDateTimeFieldName" type="string"  description="End  Date field Name" required="true"/>
<apex:attribute name="Namefield" type="string"  description="Pass the Name field here" default="Name"/>
<apex:attribute name="URL" type="string"   description="Pass the Name of the URL field" default="Id" required="true"/>  

    <script>
    (function($) {

    "use strict";
    
     var a=[];
      var d = new Date();
      Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ResponsiveCalendarCtrl.getCalendarItems}','{!ObjName}','{!URL}','{!StartDateTimeFieldName}','{!EndDateTimeFieldName}','{!Namefield}',
        function(result, event){
            if (event.status) {
             var newArr = [];
          for(var i = 0; i < result.length; i++){
              var obj = result[i];
              obj.start=result[i]['start']+(d.getTimezoneOffset() * 60000);
              obj.end = result[i]['endd'] +(d.getTimezoneOffset() * 60000);
              obj.class='event-important';
              delete(obj['endd']);
              newArr.push(obj);
            }
               a=newArr;
              // console.log(a);
               calendarapp();
            } else if (event.type === 'exception') {
                
            } else {
                
            }
        }, 
        {escape: true}
    );
   
   function calendarapp(){
   
    var options = {
        events_source: function(){
             console.log(a);
              return a;
        },
        view: 'month',
        tmpl_path: '{!URLFOR($Resource.CalendarLibrary, 'Bootstrap_ResponsiveCalendar/tmpls/')}',
        tmpl_cache: false,
        day: '{!JSENCODE(todaysdate)}' ,
        onAfterEventsLoad: function(events) {
            if(!events) {
                return;
            }
            var list = $('#eventlist');
            list.html('');

            $.each(events, function(key, val) {
                $(document.createElement('li'))
                    .html('<a href="' + val.url + '">' + val.title + '</a>')
                    .appendTo(list);
            });
        },
        onAfterViewLoad: function(view) {
            $('.page-header h3').text(this.getTitle());
            $('.btn-group button').removeClass('active');
            $('button[data-calendar-view="' + view + '"]').addClass('active');
        },
        classes: {
            months: {
                general: 'label'
            }
        }
    };

    var calendar = $('#calendar').calendar(options);

    $('.btn-group button[data-calendar-nav]').each(function() {
        var $this = $(this);
        $this.click(function() {
            calendar.navigate($this.data('calendar-nav'));
        });
    });

    $('.btn-group button[data-calendar-view]').each(function() {
        var $this = $(this);
        $this.click(function() {
            calendar.view($this.data('calendar-view'));
        });
    });

    $('#first_day').change(function(){
        var value = $(this).val();
        value = value.length ? parseInt(value) : null;
        calendar.setOptions({first_day: value});
        calendar.view();
    });

    $('#language').change(function(){
        calendar.setLanguage($(this).val());
        calendar.view();
    });

    $('#events-in-modal').change(function(){
        var val = $(this).is(':checked') ? $(this).val() : null;
        calendar.setOptions({modal: val});
    });
    $('#events-modal .modal-header, #events-modal .modal-footer').click(function(e){
        //e.preventDefault();
        //e.stopPropagation();
    });
  }
}(jQuery));

</script>

</apex:component>